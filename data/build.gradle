plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

android {
    compileSdk 32

    defaultConfig {
        minSdk 21
        targetSdk 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'consumer-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    // Dependency Injection
    implementation "io.insert-koin:koin-core:$koin_version"

    // Networking
    def retrofit_version = "2.9.0"
    def okHttp_version = "4.9.3"
    api "com.squareup.retrofit2:retrofit:$retrofit_version" // passed to business module for exception handling
    implementation "com.squareup.okhttp3:okhttp:$okHttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttp_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"

    // serialisation
    def moshi_version = "1.13.0"
    implementation "com.squareup.moshi:moshi:$moshi_version"
    implementation "com.squareup.moshi:moshi-adapters:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

    // persistence
    def room_version = "2.4.2"
    implementation("androidx.room:room-runtime:$room_version")
    implementation("androidx.room:room-ktx:$room_version")
    annotationProcessor("androidx.room:room-compiler:$room_version")
    kapt("androidx.room:room-compiler:$room_version")
    testImplementation("androidx.room:room-testing:$room_version")

    // testing
    testImplementation 'junit:junit:4.13.2'
    testImplementation "androidx.test.ext:junit:1.1.3"
}